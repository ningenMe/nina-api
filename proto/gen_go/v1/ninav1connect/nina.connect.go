// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: v1/nina.proto

package ninav1connect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	v1 "github.com/ningenMe/nina-api/proto/gen_go/v1"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// NinaServiceName is the fully-qualified name of the NinaService service.
	NinaServiceName = "nina.v1.NinaService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// NinaServiceContributionGetProcedure is the fully-qualified name of the NinaService's
	// ContributionGet RPC.
	NinaServiceContributionGetProcedure = "/nina.v1.NinaService/ContributionGet"
	// NinaServiceContributionPostProcedure is the fully-qualified name of the NinaService's
	// ContributionPost RPC.
	NinaServiceContributionPostProcedure = "/nina.v1.NinaService/ContributionPost"
	// NinaServiceContributionDeleteProcedure is the fully-qualified name of the NinaService's
	// ContributionDelete RPC.
	NinaServiceContributionDeleteProcedure = "/nina.v1.NinaService/ContributionDelete"
	// NinaServiceContributionStatisticsGetProcedure is the fully-qualified name of the NinaService's
	// ContributionStatisticsGet RPC.
	NinaServiceContributionStatisticsGetProcedure = "/nina.v1.NinaService/ContributionStatisticsGet"
)

// NinaServiceClient is a client for the nina.v1.NinaService service.
type NinaServiceClient interface {
	ContributionGet(context.Context, *connect_go.Request[emptypb.Empty]) (*connect_go.Response[v1.ContributionGetResponse], error)
	ContributionPost(context.Context) *connect_go.ClientStreamForClient[v1.ContributionPostRequest, emptypb.Empty]
	ContributionDelete(context.Context, *connect_go.Request[v1.ContributionDeleteRequest]) (*connect_go.Response[emptypb.Empty], error)
	ContributionStatisticsGet(context.Context, *connect_go.Request[v1.ContributionStatisticsGetRequest]) (*connect_go.Response[v1.ContributionStatisticsGetResponse], error)
}

// NewNinaServiceClient constructs a client for the nina.v1.NinaService service. By default, it uses
// the Connect protocol with the binary Protobuf Codec, asks for gzipped responses, and sends
// uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or
// connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewNinaServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) NinaServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &ninaServiceClient{
		contributionGet: connect_go.NewClient[emptypb.Empty, v1.ContributionGetResponse](
			httpClient,
			baseURL+NinaServiceContributionGetProcedure,
			opts...,
		),
		contributionPost: connect_go.NewClient[v1.ContributionPostRequest, emptypb.Empty](
			httpClient,
			baseURL+NinaServiceContributionPostProcedure,
			opts...,
		),
		contributionDelete: connect_go.NewClient[v1.ContributionDeleteRequest, emptypb.Empty](
			httpClient,
			baseURL+NinaServiceContributionDeleteProcedure,
			opts...,
		),
		contributionStatisticsGet: connect_go.NewClient[v1.ContributionStatisticsGetRequest, v1.ContributionStatisticsGetResponse](
			httpClient,
			baseURL+NinaServiceContributionStatisticsGetProcedure,
			opts...,
		),
	}
}

// ninaServiceClient implements NinaServiceClient.
type ninaServiceClient struct {
	contributionGet           *connect_go.Client[emptypb.Empty, v1.ContributionGetResponse]
	contributionPost          *connect_go.Client[v1.ContributionPostRequest, emptypb.Empty]
	contributionDelete        *connect_go.Client[v1.ContributionDeleteRequest, emptypb.Empty]
	contributionStatisticsGet *connect_go.Client[v1.ContributionStatisticsGetRequest, v1.ContributionStatisticsGetResponse]
}

// ContributionGet calls nina.v1.NinaService.ContributionGet.
func (c *ninaServiceClient) ContributionGet(ctx context.Context, req *connect_go.Request[emptypb.Empty]) (*connect_go.Response[v1.ContributionGetResponse], error) {
	return c.contributionGet.CallUnary(ctx, req)
}

// ContributionPost calls nina.v1.NinaService.ContributionPost.
func (c *ninaServiceClient) ContributionPost(ctx context.Context) *connect_go.ClientStreamForClient[v1.ContributionPostRequest, emptypb.Empty] {
	return c.contributionPost.CallClientStream(ctx)
}

// ContributionDelete calls nina.v1.NinaService.ContributionDelete.
func (c *ninaServiceClient) ContributionDelete(ctx context.Context, req *connect_go.Request[v1.ContributionDeleteRequest]) (*connect_go.Response[emptypb.Empty], error) {
	return c.contributionDelete.CallUnary(ctx, req)
}

// ContributionStatisticsGet calls nina.v1.NinaService.ContributionStatisticsGet.
func (c *ninaServiceClient) ContributionStatisticsGet(ctx context.Context, req *connect_go.Request[v1.ContributionStatisticsGetRequest]) (*connect_go.Response[v1.ContributionStatisticsGetResponse], error) {
	return c.contributionStatisticsGet.CallUnary(ctx, req)
}

// NinaServiceHandler is an implementation of the nina.v1.NinaService service.
type NinaServiceHandler interface {
	ContributionGet(context.Context, *connect_go.Request[emptypb.Empty]) (*connect_go.Response[v1.ContributionGetResponse], error)
	ContributionPost(context.Context, *connect_go.ClientStream[v1.ContributionPostRequest]) (*connect_go.Response[emptypb.Empty], error)
	ContributionDelete(context.Context, *connect_go.Request[v1.ContributionDeleteRequest]) (*connect_go.Response[emptypb.Empty], error)
	ContributionStatisticsGet(context.Context, *connect_go.Request[v1.ContributionStatisticsGetRequest]) (*connect_go.Response[v1.ContributionStatisticsGetResponse], error)
}

// NewNinaServiceHandler builds an HTTP handler from the service implementation. It returns the path
// on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewNinaServiceHandler(svc NinaServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	mux := http.NewServeMux()
	mux.Handle(NinaServiceContributionGetProcedure, connect_go.NewUnaryHandler(
		NinaServiceContributionGetProcedure,
		svc.ContributionGet,
		opts...,
	))
	mux.Handle(NinaServiceContributionPostProcedure, connect_go.NewClientStreamHandler(
		NinaServiceContributionPostProcedure,
		svc.ContributionPost,
		opts...,
	))
	mux.Handle(NinaServiceContributionDeleteProcedure, connect_go.NewUnaryHandler(
		NinaServiceContributionDeleteProcedure,
		svc.ContributionDelete,
		opts...,
	))
	mux.Handle(NinaServiceContributionStatisticsGetProcedure, connect_go.NewUnaryHandler(
		NinaServiceContributionStatisticsGetProcedure,
		svc.ContributionStatisticsGet,
		opts...,
	))
	return "/nina.v1.NinaService/", mux
}

// UnimplementedNinaServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedNinaServiceHandler struct{}

func (UnimplementedNinaServiceHandler) ContributionGet(context.Context, *connect_go.Request[emptypb.Empty]) (*connect_go.Response[v1.ContributionGetResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("nina.v1.NinaService.ContributionGet is not implemented"))
}

func (UnimplementedNinaServiceHandler) ContributionPost(context.Context, *connect_go.ClientStream[v1.ContributionPostRequest]) (*connect_go.Response[emptypb.Empty], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("nina.v1.NinaService.ContributionPost is not implemented"))
}

func (UnimplementedNinaServiceHandler) ContributionDelete(context.Context, *connect_go.Request[v1.ContributionDeleteRequest]) (*connect_go.Response[emptypb.Empty], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("nina.v1.NinaService.ContributionDelete is not implemented"))
}

func (UnimplementedNinaServiceHandler) ContributionStatisticsGet(context.Context, *connect_go.Request[v1.ContributionStatisticsGetRequest]) (*connect_go.Response[v1.ContributionStatisticsGetResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("nina.v1.NinaService.ContributionStatisticsGet is not implemented"))
}
