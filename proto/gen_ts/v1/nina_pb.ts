// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file v1/nina.proto (package nina.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message nina.v1.Contribution
 */
export class Contribution extends Message<Contribution> {
  /**
   * @generated from field: string contributed_at = 1;
   */
  contributedAt = "";

  /**
   * @generated from field: string organization = 2;
   */
  organization = "";

  /**
   * @generated from field: string repository = 3;
   */
  repository = "";

  /**
   * @generated from field: string user = 4;
   */
  user = "";

  /**
   * @generated from field: string status = 5;
   */
  status = "";

  constructor(data?: PartialMessage<Contribution>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "nina.v1.Contribution";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "contributed_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "organization", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "repository", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contribution {
    return new Contribution().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contribution {
    return new Contribution().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contribution {
    return new Contribution().fromJsonString(jsonString, options);
  }

  static equals(a: Contribution | PlainMessage<Contribution> | undefined, b: Contribution | PlainMessage<Contribution> | undefined): boolean {
    return proto3.util.equals(Contribution, a, b);
  }
}

/**
 * @generated from message nina.v1.ContributionGetResponse
 */
export class ContributionGetResponse extends Message<ContributionGetResponse> {
  /**
   * @generated from field: repeated nina.v1.Contribution contribution_list = 1;
   */
  contributionList: Contribution[] = [];

  constructor(data?: PartialMessage<ContributionGetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "nina.v1.ContributionGetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "contribution_list", kind: "message", T: Contribution, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContributionGetResponse {
    return new ContributionGetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContributionGetResponse {
    return new ContributionGetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContributionGetResponse {
    return new ContributionGetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ContributionGetResponse | PlainMessage<ContributionGetResponse> | undefined, b: ContributionGetResponse | PlainMessage<ContributionGetResponse> | undefined): boolean {
    return proto3.util.equals(ContributionGetResponse, a, b);
  }
}

/**
 * @generated from message nina.v1.ContributionPostRequest
 */
export class ContributionPostRequest extends Message<ContributionPostRequest> {
  /**
   * @generated from field: repeated nina.v1.Contribution contribution_list = 1;
   */
  contributionList: Contribution[] = [];

  constructor(data?: PartialMessage<ContributionPostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "nina.v1.ContributionPostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "contribution_list", kind: "message", T: Contribution, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContributionPostRequest {
    return new ContributionPostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContributionPostRequest {
    return new ContributionPostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContributionPostRequest {
    return new ContributionPostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContributionPostRequest | PlainMessage<ContributionPostRequest> | undefined, b: ContributionPostRequest | PlainMessage<ContributionPostRequest> | undefined): boolean {
    return proto3.util.equals(ContributionPostRequest, a, b);
  }
}

/**
 * @generated from message nina.v1.ContributionDeleteRequest
 */
export class ContributionDeleteRequest extends Message<ContributionDeleteRequest> {
  /**
   * @generated from field: string start_at = 1;
   */
  startAt = "";

  /**
   * @generated from field: string end_at = 2;
   */
  endAt = "";

  constructor(data?: PartialMessage<ContributionDeleteRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "nina.v1.ContributionDeleteRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "start_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "end_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContributionDeleteRequest {
    return new ContributionDeleteRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContributionDeleteRequest {
    return new ContributionDeleteRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContributionDeleteRequest {
    return new ContributionDeleteRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContributionDeleteRequest | PlainMessage<ContributionDeleteRequest> | undefined, b: ContributionDeleteRequest | PlainMessage<ContributionDeleteRequest> | undefined): boolean {
    return proto3.util.equals(ContributionDeleteRequest, a, b);
  }
}

/**
 * @generated from message nina.v1.ContributionSum
 */
export class ContributionSum extends Message<ContributionSum> {
  /**
   * @generated from field: string date = 1;
   */
  date = "";

  /**
   * @generated from field: int32 sum = 2;
   */
  sum = 0;

  constructor(data?: PartialMessage<ContributionSum>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "nina.v1.ContributionSum";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "sum", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContributionSum {
    return new ContributionSum().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContributionSum {
    return new ContributionSum().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContributionSum {
    return new ContributionSum().fromJsonString(jsonString, options);
  }

  static equals(a: ContributionSum | PlainMessage<ContributionSum> | undefined, b: ContributionSum | PlainMessage<ContributionSum> | undefined): boolean {
    return proto3.util.equals(ContributionSum, a, b);
  }
}

/**
 * @generated from message nina.v1.ContributionStatistics
 */
export class ContributionStatistics extends Message<ContributionStatistics> {
  /**
   * @generated from field: int32 sum = 1;
   */
  sum = 0;

  /**
   * @generated from field: repeated nina.v1.ContributionSum contribution_sum_list = 2;
   */
  contributionSumList: ContributionSum[] = [];

  constructor(data?: PartialMessage<ContributionStatistics>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "nina.v1.ContributionStatistics";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sum", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "contribution_sum_list", kind: "message", T: ContributionSum, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContributionStatistics {
    return new ContributionStatistics().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContributionStatistics {
    return new ContributionStatistics().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContributionStatistics {
    return new ContributionStatistics().fromJsonString(jsonString, options);
  }

  static equals(a: ContributionStatistics | PlainMessage<ContributionStatistics> | undefined, b: ContributionStatistics | PlainMessage<ContributionStatistics> | undefined): boolean {
    return proto3.util.equals(ContributionStatistics, a, b);
  }
}

/**
 * @generated from message nina.v1.ContributionStatisticsGetRequest
 */
export class ContributionStatisticsGetRequest extends Message<ContributionStatisticsGetRequest> {
  /**
   * @generated from field: string user = 1;
   */
  user = "";

  constructor(data?: PartialMessage<ContributionStatisticsGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "nina.v1.ContributionStatisticsGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContributionStatisticsGetRequest {
    return new ContributionStatisticsGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContributionStatisticsGetRequest {
    return new ContributionStatisticsGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContributionStatisticsGetRequest {
    return new ContributionStatisticsGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContributionStatisticsGetRequest | PlainMessage<ContributionStatisticsGetRequest> | undefined, b: ContributionStatisticsGetRequest | PlainMessage<ContributionStatisticsGetRequest> | undefined): boolean {
    return proto3.util.equals(ContributionStatisticsGetRequest, a, b);
  }
}

/**
 * @generated from message nina.v1.ContributionStatisticsGetResponse
 */
export class ContributionStatisticsGetResponse extends Message<ContributionStatisticsGetResponse> {
  /**
   * @generated from field: nina.v1.ContributionStatistics created_pull_request_statistics = 1;
   */
  createdPullRequestStatistics?: ContributionStatistics;

  /**
   * @generated from field: nina.v1.ContributionStatistics commented_statistics = 2;
   */
  commentedStatistics?: ContributionStatistics;

  /**
   * @generated from field: nina.v1.ContributionStatistics approved_statistics = 3;
   */
  approvedStatistics?: ContributionStatistics;

  constructor(data?: PartialMessage<ContributionStatisticsGetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "nina.v1.ContributionStatisticsGetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "created_pull_request_statistics", kind: "message", T: ContributionStatistics },
    { no: 2, name: "commented_statistics", kind: "message", T: ContributionStatistics },
    { no: 3, name: "approved_statistics", kind: "message", T: ContributionStatistics },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContributionStatisticsGetResponse {
    return new ContributionStatisticsGetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContributionStatisticsGetResponse {
    return new ContributionStatisticsGetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContributionStatisticsGetResponse {
    return new ContributionStatisticsGetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ContributionStatisticsGetResponse | PlainMessage<ContributionStatisticsGetResponse> | undefined, b: ContributionStatisticsGetResponse | PlainMessage<ContributionStatisticsGetResponse> | undefined): boolean {
    return proto3.util.equals(ContributionStatisticsGetResponse, a, b);
  }
}

