name: envoy-api-deploy

on:
#  push:
#    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write

jobs:
  constant:
    runs-on: ubuntu-latest
    outputs:
      aws-region: ${{ steps.constant.outputs.aws-region }}
      aws-ecr-repository: nina-envoy-api-repository
    steps:
      - id: checkout
        name: checkout
        uses: actions/checkout@v3.0.0
      - id: constant
        name: constant
        uses: ./.github/workflows/composite/constant

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: [ constant ]
    steps:
      - id: checkout
        name: checkout
        uses: actions/checkout@v3.0.0
      - id: docker-build-and-push-image
        name: docker build and push image
        uses: ./.github/workflows/composite/docker-build-and-push-image
        with:
          dockerfile-path: "./envoy"
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: ${{ needs.constant.outputs.aws-region }}
          aws-ecr-registry: ${{ secrets.AWS_ECR_REGISTRY }}
          aws-ecr-repository: ${{ needs.constant.outputs.aws-ecr-repository }}

  codedeploy:
    runs-on: ubuntu-latest
    needs: [ constant, build-and-push-image ]
    steps:
      - id: checkout
        name: checkout
        uses: actions/checkout@v3.0.0
      - id: codedeploy
        name: codedeploy
        uses: ./.github/workflows/composite/codedeploy
        with:
          application-name: nina-envoy-api
          working-directory: "./envoy"
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: ${{ needs.constant.outputs.aws-region }}
          aws-ecr-registry: ${{ secrets.AWS_ECR_REGISTRY }}
          aws-ecr-repository: ${{ needs.constant.outputs.aws-ecr-repository }}
          aws-s3-bucket: ${{ secrets.AWS_S3_BUCKET }}
